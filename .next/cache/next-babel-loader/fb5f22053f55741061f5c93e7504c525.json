{"ast":null,"code":"var _jsxFileName = \"/Users/coding/next-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Result } from '../components/result/Result';\nimport { StreamingService } from '../components/streamingService/StreamingService';\nimport { Header } from '../components/header/Header';\nimport styles from './index.module.css';\nconst streamingServicesSample = [{\n  name: 'Spotify',\n  rate: 0.00437,\n  count: 0\n}, {\n  name: 'Apple Music',\n  rate: 0.00735,\n  count: 0\n}, {\n  name: 'Tidal',\n  rate: 0.0125,\n  count: 0\n}, {\n  name: 'Deezer',\n  rate: 0.0064,\n  count: 0\n}, {\n  name: 'Napster',\n  rate: 0.019,\n  count: 0\n}, {\n  name: 'Pandora',\n  rate: 0.00133,\n  count: 0\n}, {\n  name: 'Amazon Music',\n  rate: 0.00437,\n  count: 0\n}];\nexport default function Home(state) {\n  const {\n    0: total,\n    1: setTotal\n  } = useState(0);\n  const {\n    0: streamingServices,\n    1: setStreamingService\n  } = useState(streamingServicesSample);\n\n  const calculateTotal = () => {\n    let currentTotal = 0;\n    streamingServices.forEach(streaming => {\n      currentTotal += streaming.count * streaming.rate;\n    });\n    setTotal(currentTotal);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"The streaming salary calculator\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, maximum-scale=1.0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Modern tool to give you information about your streaming earning. Choose all your platforms and get your informations.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: styles.streamingsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, streamingServices.map(streaming => __jsx(StreamingService, {\n    streaming: streaming,\n    calculateTotal: calculateTotal,\n    key: streaming.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Result, {\n    totalResult: total.toFixed(2),\n    href: \"/results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/coding/next-ts/pages/index.tsx"],"names":["React","useState","Head","Result","StreamingService","Header","styles","streamingServicesSample","name","rate","count","Home","state","total","setTotal","streamingServices","setStreamingService","calculateTotal","currentTotal","forEach","streaming","page","container","header","streamingsContainer","map","link","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nimport { Result } from '../components/result/Result';\nimport { StreamingService } from '../components/streamingService/StreamingService';\nimport { Header } from '../components/header/Header';\n\nimport { useContext } from 'react';\n\nimport styles from './index.module.css';\n\ninterface State {\n\ttotal: number;\n\tstreamingServices: { name: string; rate: number; count: number }[];\n}\n\nconst streamingServicesSample: { name: string; rate: number; count: number }[] = [\n\t{\n\t\tname: 'Spotify',\n\t\trate: 0.00437,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Apple Music',\n\t\trate: 0.00735,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Tidal',\n\t\trate: 0.0125,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Deezer',\n\t\trate: 0.0064,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Napster',\n\t\trate: 0.019,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Pandora',\n\t\trate: 0.00133,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Amazon Music',\n\t\trate: 0.00437,\n\t\tcount: 0\n\t}\n];\n\n\nexport default function Home(state:State): React.ReactNode {\n\n\n\tconst [ total, setTotal ] = useState(0);\n\tconst [ streamingServices, setStreamingService ] = useState(streamingServicesSample);\n\n\n\tconst calculateTotal = () => {\n\t\tlet currentTotal = 0;\n\t\tstreamingServices.forEach((streaming) => {\n\t\t\tcurrentTotal += streaming.count * streaming.rate;\n\t\t});\n\t\tsetTotal(currentTotal);\n\t};\n\n\treturn (\n\t\t<div className={styles.page}>\n\t\t\t<Head>\n\t\t\t\t<title>The streaming salary calculator</title>\n\t\t\t\t<meta name=\"viewport\" content=\"initial-scale=1.0, maximum-scale=1.0\"/>\n\t\t\t\t<meta name=\"description\" content=\"Modern tool to give you information about your streaming earning. Choose all your platforms and\n\t\t\t\t\tget your informations.\"/>\n\t\t\t</Head>\n\t\t\t<div className={styles.container}>\n\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t<Header />\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.streamingsContainer}>\n\t\t\t\t\t{streamingServices.map((streaming) => (\n\t\t\t\t\t\t<StreamingService streaming={streaming} calculateTotal={calculateTotal} key={streaming.name} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.link}>\n\t\t\t\t\t<Result totalResult={total.toFixed(2)}  href={\"/results\"}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}