{"ast":null,"code":"var _jsxFileName = \"/Users/coding/next-ts/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Result } from '../components/result/Result';\nimport { Calculator } from '../components/calculator/Calculator';\nimport { useState } from 'react';\nimport styles from './app.module.css';\nexport default function Home() {\n  var _useState = useState(streamingServices),\n      streamings = _useState[0],\n      setStreamings = _useState[1];\n\n  var total = 0;\n\n  function calculateTotal() {\n    streamingServices.map(function (streaming) {\n      return total += streaming.count * streaming.rate;\n    });\n    return total;\n  }\n\n  return __jsx(\"div\", {\n    className: styles.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.streamingsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, streamingServices.map(function (streaming) {\n    return __jsx(Calculator, {\n      streaming: streaming,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  })), __jsx(Result, {\n    totalResult: calculateTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n}\nvar streamingServices = [{\n  name: \"Spotify\",\n  rate: 0.5,\n  count: 0\n}, {\n  name: \"Apple Music\",\n  rate: 0.5,\n  count: 0\n}, {\n  name: \"Tidal\",\n  rate: 0.5,\n  count: 0\n}, {\n  name: \"Deezer\",\n  rate: 0.5,\n  count: 0\n}];","map":{"version":3,"sources":["/Users/coding/next-ts/pages/_app.tsx"],"names":["Result","Calculator","useState","styles","Home","streamingServices","streamings","setStreamings","total","calculateTotal","map","streaming","count","rate","page","container","streamingsContainer","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBACQF,QAAQ,CAACG,iBAAD,CADhB;AAAA,MACrBC,UADqB;AAAA,MACTC,aADS;;AAG3B,MAAIC,KAAK,GAAG,CAAZ;;AAGA,WAASC,cAAT,GAAkC;AAC9BJ,IAAAA,iBAAiB,CAACK,GAAlB,CAAsB,UAAAC,SAAS;AAAA,aAC3BH,KAAK,IAAIG,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAACE,IADV;AAAA,KAA/B;AAEA,WAAOL,KAAP;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACW,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,iBAAiB,CAACK,GAAlB,CAAsB,UAAAC,SAAS;AAAA,WAC5B,MAAC,UAAD;AAAY,MAAA,SAAS,EAAEA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD4B;AAAA,GAA/B,CADL,CADJ,EAMI,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAEF,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADJ;AAaH;AAGD,IAAMJ,iBAAgE,GAAG,CACrE;AACIY,EAAAA,IAAI,EAAE,SADV;AAEIJ,EAAAA,IAAI,EAAE,GAFV;AAGID,EAAAA,KAAK,EAAE;AAHX,CADqE,EAMrE;AACIK,EAAAA,IAAI,EAAE,aADV;AAEIJ,EAAAA,IAAI,EAAE,GAFV;AAGID,EAAAA,KAAK,EAAE;AAHX,CANqE,EAWrE;AACIK,EAAAA,IAAI,EAAE,OADV;AAEIJ,EAAAA,IAAI,EAAE,GAFV;AAGID,EAAAA,KAAK,EAAE;AAHX,CAXqE,EAgBrE;AACIK,EAAAA,IAAI,EAAE,QADV;AAEIJ,EAAAA,IAAI,EAAE,GAFV;AAGID,EAAAA,KAAK,EAAE;AAHX,CAhBqE,CAAzE","sourcesContent":["import { Result } from '../components/result/Result';\nimport { Calculator } from '../components/calculator/Calculator';\nimport { useState } from 'react';\n\n\nimport styles from './app.module.css'\n\nexport default function Home() {\n    const[streamings, setStreamings] = useState(streamingServices);\n\n    let total = 0;\n\n\n    function calculateTotal(): number {\n        streamingServices.map(streaming => \n            total += streaming.count * streaming.rate)\n        return total;\n    }\n\n    return (\n        <div className={styles.page}>\n            <div className={styles.container}>\n                <div className={styles.streamingsContainer}>\n                    {streamingServices.map(streaming => \n                        <Calculator streaming={streaming}/>\n                    )}\n                </div>\n                <Result totalResult={calculateTotal}/>\n            </div>\n        </div>\n    );\n\n}\n\n\nconst streamingServices: {name: string, rate: number, count: number}[] = [\n    {\n        name: \"Spotify\",\n        rate: 0.5,\n        count: 0,\n    },\n    {\n        name: \"Apple Music\",\n        rate: 0.5,\n        count: 0,\n    },\n    {\n        name: \"Tidal\",\n        rate: 0.5,\n        count: 0,\n    },\n    {\n        name: \"Deezer\",\n        rate: 0.5,\n        count: 0,\n    },\n\n]\n"]},"metadata":{},"sourceType":"module"}