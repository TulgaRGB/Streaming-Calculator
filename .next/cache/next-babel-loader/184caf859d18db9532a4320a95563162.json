{"ast":null,"code":"var _jsxFileName = \"/Users/coding/next-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Result } from '../components/result/Result';\nimport { StreamingService } from '../components/streamingService/StreamingService';\nimport { Header } from '../components/header/Header';\nimport styles from './index.module.css';\nexport default class Home extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      total: 0,\n      streamingServices: streamingServices\n    });\n  }\n\n  render() {\n    const calculateTotal = () => {\n      let currentTotal = 0;\n      this.state.streamingServices.forEach(streaming => {\n        currentTotal += streaming.count * streaming.rate;\n      });\n      this.setState({\n        total: currentTotal\n      });\n    };\n\n    return __jsx(\"div\", {\n      className: styles.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"The streaming salary calculator\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, maximum-scale=1.0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Modern tool to give you information about your streaming earning. Choose all your platforms and get your informations.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: styles.streamingsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, streamingServices.map(streaming => __jsx(StreamingService, {\n      streaming: streaming,\n      calculateTotal: calculateTotal,\n      key: streaming.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), __jsx(Link, {\n      href: \"/results\",\n      passHref: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Result, {\n      passHref: true,\n      totalResult: this.state.total.toFixed(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))));\n  }\n\n}\nconst streamingServices = [{\n  name: 'Spotify',\n  rate: 0.00437,\n  count: 0\n}, {\n  name: 'Apple Music',\n  rate: 0.00735,\n  count: 0\n}, {\n  name: 'Tidal',\n  rate: 0.0125,\n  count: 0\n}, {\n  name: 'Deezer',\n  rate: 0.0064,\n  count: 0\n}, {\n  name: 'Napster',\n  rate: 0.019,\n  count: 0\n}, {\n  name: 'Pandora',\n  rate: 0.00133,\n  count: 0\n}, {\n  name: 'Amazon Music',\n  rate: 0.00437,\n  count: 0\n}];","map":{"version":3,"sources":["/Users/coding/next-ts/pages/index.tsx"],"names":["React","Head","Link","Result","StreamingService","Header","styles","Home","PureComponent","total","streamingServices","render","calculateTotal","currentTotal","state","forEach","streaming","count","rate","setState","page","container","header","streamingsContainer","map","name","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { Result } from '../components/result/Result';\nimport { StreamingService } from '../components/streamingService/StreamingService';\nimport { Header } from '../components/header/Header';\n\nimport styles from './index.module.css';\n\ninterface State {\n\ttotal: number;\n\tstreamingServices: { name: string; rate: number; count: number }[];\n}\n\nexport default class Home extends React.PureComponent<void,  State> {\n\tstate = {\n\t\ttotal: 0, streamingServices: streamingServices\n\t};\n\n\tpublic render(): React.ReactNode {\n\t\tconst calculateTotal = () => {\n\t\t\tlet currentTotal = 0;\n\t\t\tthis.state.streamingServices.forEach((streaming) => {\n\t\t\t\tcurrentTotal += streaming.count * streaming.rate;\n\t\t\t});\n\t\t\tthis.setState({ total: currentTotal });\n\t\t};\n\n\t\treturn (\n\t\t\t<div className={styles.page}>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>The streaming salary calculator</title>\n\t\t\t\t\t<meta name=\"viewport\" content=\"initial-scale=1.0, maximum-scale=1.0\"/>\n                    <meta name=\"description\" content=\"Modern tool to give you information about your streaming earning. Choose all your platforms and\n\t\t\t\t\t\tget your informations.\"/>\n\t\t\t\t</Head>\n\t\t\t\t<div className={styles.container}>\n\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.streamingsContainer}>\n\t\t\t\t\t\t{streamingServices.map((streaming) => (\n\t\t\t\t\t\t\t<StreamingService streaming={streaming} calculateTotal={calculateTotal} key={streaming.name} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Link href=\"/results\" passHref>\n\t\t\t\t\t\t<Result passHref totalResult={this.state.total.toFixed(2)}/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst streamingServices: { name: string; rate: number; count: number }[] = [\n\t{\n\t\tname: 'Spotify',\n\t\trate: 0.00437,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Apple Music',\n\t\trate: 0.00735,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Tidal',\n\t\trate: 0.0125,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Deezer',\n\t\trate: 0.0064,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Napster',\n\t\trate: 0.019,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Pandora',\n\t\trate: 0.00133,\n\t\tcount: 0\n\t},\n\t{\n\t\tname: 'Amazon Music',\n\t\trate: 0.00437,\n\t\tcount: 0\n\t}\n];\n"]},"metadata":{},"sourceType":"module"}