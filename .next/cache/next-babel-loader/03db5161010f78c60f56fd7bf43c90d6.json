{"ast":null,"code":"var _jsxFileName = \"/Users/coding/next-ts/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport { Result } from '../components/result/Result';\nimport { Calculator } from '../components/calculator/Calculator';\nimport { Header } from '../components/header/Header';\nimport React from 'react';\nimport styles from './index.module.css';\nexport default class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: 0,\n      streamingServices: streamingServices\n    };\n  }\n\n  render() {\n    const calculateTotal = () => {\n      let currentTotal = 0;\n      this.state.streamingServices.forEach(streaming => {\n        currentTotal += streaming.count * streaming.rate;\n      });\n      this.setState({\n        total: currentTotal\n      });\n    };\n\n    return __jsx(\"div\", {\n      className: styles.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, maximum-scale=1.0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: styles.streamingsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, streamingServices.map(streaming => __jsx(\"div\", {\n      key: streaming.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Calculator, {\n      streaming: streaming,\n      calculateTotal: calculateTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))), __jsx(Result, {\n      totalResult: this.state.total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\nconst streamingServices = [{\n  name: \"Spotify\",\n  rate: 0.00437,\n  count: 0\n}, {\n  name: \"Apple Music\",\n  rate: 0.00735,\n  count: 0\n}, {\n  name: \"Tidal\",\n  rate: 0.01250,\n  count: 0\n}, {\n  name: \"Deezer\",\n  rate: 0.00640,\n  count: 0\n}, {\n  name: \"Napster\",\n  rate: 0.01900,\n  count: 0\n}, {\n  name: \"Pandora\",\n  rate: 0.00133,\n  count: 0\n}, {\n  name: \"Amazon Music\",\n  rate: 0.00437,\n  count: 0\n}];","map":{"version":3,"sources":["/Users/coding/next-ts/pages/index.tsx"],"names":["Result","Calculator","Header","React","styles","Home","PureComponent","constructor","props","state","total","streamingServices","render","calculateTotal","currentTotal","forEach","streaming","count","rate","setState","page","container","header","streamingsContainer","map","name"],"mappings":"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","sourcesContent":["import { Result } from '../components/result/Result';\nimport { Calculator } from '../components/calculator/Calculator';\nimport { Header } from '../components/header/Header';\nimport React, { useState } from 'react';\n\n\nimport styles from './index.module.css'\n\ninterface Props {\n\n}\n\ninterface State {\n    total: number;\n    streamingServices: {name: string, rate: number, count: number}[];\n}\n\nexport default class Home extends React.PureComponent<Props, State> {\n    \n    constructor (props: Props) {\n        super(props);\n        this.state = { total: 0, streamingServices: streamingServices };\n    }\n\n    public render(): React.ReactNode {\n\n        const calculateTotal = () => {\n            let currentTotal = 0;\n            this.state.streamingServices.forEach(streaming => {\n                currentTotal += streaming.count * streaming.rate;\n            }\n            )\n            this.setState({total: currentTotal})\n        };\n\n    return (\n            <div className={styles.page}>\n                <meta name=\"viewport\" content=\"initial-scale=1.0, maximum-scale=1.0\"/>\n                <div className={styles.container}>\n                    <div className={styles.header}>\n                        <Header/>\n                    </div>\n                    <div className={styles.streamingsContainer}>\n                        {streamingServices.map(streaming => (\n                            <div key={streaming.name}>              \n                                <Calculator streaming={streaming} calculateTotal={calculateTotal}/>\n                            </div>\n                        )\n                        )}\n                    </div>\n                    <Result totalResult={this.state.total}/>\n                </div>\n            </div>\n    );\n }\n\n}\n\n\nconst streamingServices: {name: string, rate: number, count: number}[] = [\n    {\n        name: \"Spotify\",\n        rate: 0.00437,\n        count: 0,\n    },\n    {\n        name: \"Apple Music\",\n        rate: 0.00735,\n        count: 0,\n    },\n    {\n        name: \"Tidal\",\n        rate: 0.01250,\n        count: 0,\n    },\n    {\n        name: \"Deezer\",\n        rate: 0.00640,\n        count: 0,\n    },\n    {\n        name: \"Napster\",\n        rate: 0.01900,\n        count: 0,\n    },\n    {\n        name: \"Pandora\",\n        rate: 0.00133,\n        count: 0,\n    },\n    {\n        name: \"Amazon Music\",\n        rate: 0.00437,\n        count: 0,\n    },\n\n]\n\n\n"]},"metadata":{},"sourceType":"module"}