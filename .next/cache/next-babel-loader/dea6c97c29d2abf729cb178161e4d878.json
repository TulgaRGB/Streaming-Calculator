{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/coding/next-ts/components/calculator/Calculator.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from './Calculator.module.css';\nexport var Calculator =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Calculator, _React$PureComponent);\n\n  function Calculator(props) {\n    _classCallCheck(this, Calculator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n  }\n\n  _createClass(Calculator, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          streaming = _this$props.streaming,\n          calculateTotal = _this$props.calculateTotal,\n          total = _this$props.total;\n\n      var _useState = useState(),\n          count = _useState[0],\n          setCount = _useState[1];\n\n      function handleChange(value) {\n        if (isNaN(Number(value))) {\n          alert(\"field can only be a number\");\n          if (count === undefined) setCount('');else setCount(count);\n          return;\n        }\n\n        setCount(value);\n        streaming.count = Number(value);\n        calculateTotal();\n      }\n\n      return __jsx(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, streaming.name, __jsx(\"div\", {\n        className: styles.arrowAndStreams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: styles.arrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: styles.underline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        placeholder: \"N. of streams\",\n        className: styles.input,\n        value: count,\n        onChange: function onChange(event) {\n          return handleChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Calculator;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/coding/next-ts/components/calculator/Calculator.tsx"],"names":["React","useState","styles","Calculator","props","streaming","calculateTotal","total","count","setCount","handleChange","value","isNaN","Number","alert","undefined","container","name","arrowAndStreams","arrow","underline","input","event","target","PureComponent"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAaA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAEI,sBAAYC,KAAZ,EAAyB;AAAA;;AAAA,mFACfA,KADe;AAExB;;AAJL;AAAA;AAAA,6BAMwC;AAAA,wBACa,KAAKA,KADlB;AAAA,UACxBC,SADwB,eACxBA,SADwB;AAAA,UACbC,cADa,eACbA,cADa;AAAA,UACGC,KADH,eACGA,KADH;;AAAA,sBAGNN,QAAQ,EAHF;AAAA,UAGzBO,KAHyB;AAAA,UAGlBC,QAHkB;;AAKhC,eAASC,YAAT,CAAsBC,KAAtB,EAA2C;AACvC,YAAGC,KAAK,CAACC,MAAM,CAACF,KAAD,CAAP,CAAR,EAAyB;AACrBG,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,cAAGN,KAAK,KAAKO,SAAb,EACIN,QAAQ,CAAC,EAAD,CAAR,CADJ,KAGIA,QAAQ,CAACD,KAAD,CAAR;AACJ;AACH;;AACDC,QAAAA,QAAQ,CAACE,KAAD,CAAR;AACAN,QAAAA,SAAS,CAACG,KAAV,GAAkBK,MAAM,CAACF,KAAD,CAAxB;AACAL,QAAAA,cAAc;AACjB;;AAID,aACI;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,SAAS,CAACY,IADf,EAEI;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,WAAW,EAAC,eAAnB;AAAmC,QAAA,SAAS,EAAElB,MAAM,CAACmB,KAArD;AAA4D,QAAA,KAAK,EAAEb,KAAnE;AAA0E,QAAA,QAAQ,EAAE,kBAACc,KAAD;AAAA,iBAAWZ,YAAY,CAACY,KAAK,CAACC,MAAN,CAAaZ,KAAd,CAAvB;AAAA,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CAFJ,CADJ;AAWH;AAtCL;;AAAA;AAAA,EAAgCX,KAAK,CAACwB,aAAtC","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport styles from './Calculator.module.css'\n\ninterface Props {\n    streaming: {\n        name: string;\n        rate: number;\n        count: number;\n    };\n    calculateTotal: () => void\n    total: number;\n}\n\n\nexport class Calculator extends React.PureComponent<Props>{\n\n    constructor(props: Props){\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        const { streaming, calculateTotal, total } = this.props;\n\n        const [count, setCount] = useState();\n\n        function handleChange(value: string): void {\n            if(isNaN(Number(value))) {\n                alert(\"field can only be a number\");\n                if(count === undefined)\n                    setCount('');\n                else\n                    setCount(count);\n                return;\n            }\n            setCount(value);\n            streaming.count = Number(value);\n            calculateTotal();\n        }\n\n\n\n        return(\n            <div className={styles.container}>\n                {streaming.name}\n                <div className={styles.arrowAndStreams}>\n                    <div className={styles.arrow}/>\n                    <div className={styles.underline}>\n                        <input placeholder=\"N. of streams\" className={styles.input} value={count} onChange={(event) => handleChange(event.target.value)}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}